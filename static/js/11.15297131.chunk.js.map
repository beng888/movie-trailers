{"version":3,"sources":["components/views/FavoritePage/FavoritePage.js"],"names":["FavoritePage","user","useSelector","state","_useState","useState","_useState2","Object","C_Users_Admin_Desktop_moviedb_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","Favorites","setFavorites","_useState3","_useState4","Loading","setLoading","variable","userFrom","localStorage","getItem","useEffect","fetchFavoredMovie","axios","post","then","response","data","success","console","log","favorites","alert","renderCards","map","favorite","index","content","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","moviePost","src","concat","IMAGE_BASE_URL","POSTER_SIZE","popover","react_bootstrap_Popover__WEBPACK_IMPORTED_MODULE_3__","id","Content","key","react_bootstrap_OverlayTrigger__WEBPACK_IMPORTED_MODULE_5__","trigger","placement","overlay","variant","className","movieTitle","movieRunTime","movieReleaseDate","react_bootstrap_Button__WEBPACK_IMPORTED_MODULE_4__","as","Link","to","movieId","onClick","variables","onClickDelete","style","width","margin","userData","isAuth","fontSize","height","display","flexDirection","justifyContent","alignItems","href","react_bootstrap_Table__WEBPACK_IMPORTED_MODULE_2__","striped","bordered","responsive"],"mappings":"0OA8IeA,UAnIf,WACE,IAAMC,EAAOC,YAAY,SAACC,GAAD,OAAWA,EAAMF,OADpBG,EAGYC,mBAAS,IAHrBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGfK,EAHeH,EAAA,GAGJI,EAHIJ,EAAA,GAAAK,EAIQN,oBAAS,GAJjBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAIfE,EAJeD,EAAA,GAINE,EAJMF,EAAA,GAKlBG,EAAW,CAAEC,SAAUC,aAAaC,QAAQ,WAEhDC,oBAAU,WACRC,KACC,IAEH,IAAMA,EAAoB,WACxBC,IAAMC,KAAK,gCAAiCP,GAAUQ,KAAK,SAACC,GACtDA,EAASC,KAAKC,SAChBC,QAAQC,IAAIJ,EAASC,KAAKI,WAC1BnB,EAAac,EAASC,KAAKI,WAC3Bf,GAAW,IAEXgB,MAAM,wCAsBNC,EAActB,EAAUuB,IAAI,SAACC,EAAUC,GAC3C,IAAMC,EACJC,EAAAC,EAAAC,cAAA,WACGL,EAASM,UACRH,EAAAC,EAAAC,cAAA,OAAKE,IAAG,GAAAC,OAAKC,KAALD,OAAsBE,KAAtBF,OAAoCR,EAASM,aAErD,YAIAK,EACJR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAASC,GAAG,iBACVV,EAAAC,EAAAC,cAACO,EAAA,EAAQE,QAAT,KAAkBZ,IAGtB,OACEC,EAAAC,EAAAC,cAAA,MAAIU,IAAKd,GAIPE,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEC,QAAS,CAAC,QAAS,SACnBC,UAAU,QACVC,QAASR,GAETR,EAAAC,EAAAC,cAAA,MAAIe,QAAQ,UAAUC,UAAU,qBAC7BrB,EAASsB,aAGdnB,EAAAC,EAAAC,cAAA,UAAKL,EAASuB,aAAd,SACApB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,qBAAqBrB,EAASwB,iBAA5C,KACArB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACEL,QAAQ,eACRM,GAAIC,IACJC,GAAE,UAAApB,OAAYR,EAAS6B,UAHzB,eAQF1B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACEL,QAAQ,iBACRU,QAAS,kBA5DG,SAACD,EAAS9C,GAC9B,IAAMgD,EAAY,CAChBF,QAASA,EACT9C,SAAUA,GAGZK,IACGC,KAAK,mCAAoC0C,GACzCzC,KAAK,SAACC,GACDA,EAASC,KAAKC,QAChBN,IAEAU,MAAM,oCAgDWmC,CAAchC,EAAS6B,QAAS7B,EAASjB,YAF1D,cAWR,OACEoB,EAAAC,EAAAC,cAAA,OAAK4B,MAAO,CAAEC,MAAO,MAAOC,OAAQ,cAElChC,EAAAC,EAAAC,cAAA,WACCrC,EAAKoE,WAAapE,EAAKoE,SAASC,OAC/BlC,EAAAC,EAAAC,cAAA,OACE4B,MAAO,CACLC,MAAO,OACPI,SAAU,OACVC,OAAQ,QACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,WAGdxC,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,KAAGuC,KAAK,UAAR,sBAGDhE,GACCuB,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,YAAU,GAChC7C,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,qCAGJF,EAAAC,EAAAC,cAAA,aAAQP","file":"static/js/11.15297131.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport axios from \"axios\";\r\nimport \"./favorite.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../Config\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction FavoritePage() {\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [Favorites, setFavorites] = useState([]);\r\n  const [Loading, setLoading] = useState(true);\r\n  let variable = { userFrom: localStorage.getItem(\"userId\") };\r\n\r\n  useEffect(() => {\r\n    fetchFavoredMovie();\r\n  }, []);\r\n\r\n  const fetchFavoredMovie = () => {\r\n    axios.post(\"/api/favorite/getFavoredMovie\", variable).then((response) => {\r\n      if (response.data.success) {\r\n        console.log(response.data.favorites);\r\n        setFavorites(response.data.favorites);\r\n        setLoading(false);\r\n      } else {\r\n        alert(\"Failed to get subscription videos\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const onClickDelete = (movieId, userFrom) => {\r\n    const variables = {\r\n      movieId: movieId,\r\n      userFrom: userFrom,\r\n    };\r\n\r\n    axios\r\n      .post(\"/api/favorite/removeFromFavorite\", variables)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          fetchFavoredMovie();\r\n        } else {\r\n          alert(\"Failed to Remove From Favorite\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const renderCards = Favorites.map((favorite, index) => {\r\n    const content = (\r\n      <div>\r\n        {favorite.moviePost ? (\r\n          <img src={`${IMAGE_BASE_URL}${POSTER_SIZE}${favorite.moviePost}`} />\r\n        ) : (\r\n          \"no image\"\r\n        )}\r\n      </div>\r\n    );\r\n    const popover = (\r\n      <Popover id=\"popover-basic\">\r\n        <Popover.Content>{content}</Popover.Content>\r\n      </Popover>\r\n    );\r\n    return (\r\n      <tr key={index}>\r\n        {/* <Popover content={content} title={`${favorite.movieTitle}`}>\r\n          <td>{favorite.movieTitle}</td>\r\n        </Popover> */}\r\n        <OverlayTrigger\r\n          trigger={[\"hover\", \"focus\"]}\r\n          placement=\"right\"\r\n          overlay={popover}\r\n        >\r\n          <td variant=\"success\" className=\"details__truncate\">\r\n            {favorite.movieTitle}\r\n          </td>\r\n        </OverlayTrigger>\r\n        <td>{favorite.movieRunTime} mins</td>\r\n        <td className=\"details__truncate\">{favorite.movieReleaseDate} </td>\r\n        <td>\r\n          <Button\r\n            variant=\"outline-info\"\r\n            as={Link}\r\n            to={`/movie/${favorite.movieId}`}\r\n          >\r\n            Go to Page\r\n          </Button>\r\n        </td>\r\n        <td>\r\n          <Button\r\n            variant=\"outline-danger\"\r\n            onClick={() => onClickDelete(favorite.movieId, favorite.userFrom)}\r\n          >\r\n            Remove\r\n          </Button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div style={{ width: \"85%\", margin: \"3rem auto\" }}>\r\n      {/* <Title level={2}> Favorite Movies By Me </Title> */}\r\n      <hr />\r\n      {user.userData && !user.userData.isAuth ? (\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            fontSize: \"2rem\",\r\n            height: \"500px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <p>Please Log in first...</p>\r\n          <a href=\"/login\">Go to Login page</a>\r\n        </div>\r\n      ) : (\r\n        !Loading && (\r\n          <Table striped bordered responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>Movie Title</th>\r\n                <th> RunTime</th>\r\n                <th> Release Date</th>\r\n                <th>Movie Page</th>\r\n                <th>Remove from favorites</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{renderCards}</tbody>\r\n          </Table>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavoritePage;\r\n"],"sourceRoot":""}